##
##

###
###   DEFAULT SETTINGS
###

XKMSHOME = /opt/xkms
DEST     = $ENV::XKMSHOME/openssl
RANDFILE = $DEST/.rand


###
###   THE TYPES OF CERTIFICATION AUTHORITIES
###

##
##  This is our "root" CA.  It only creates sub-CA's.
[ root_ca ]
dir              = $DEST/root_ca    # Where everything is kept
serial           = $dir/serial.txt  # The current serial number
database         = $dir/db.txt      # database index file
certificate      = $dir/cert.pem    # The CA certificate
private_key      = $dir/key.pem     # The private key
new_certs_dir    = $dir/certs       # default place for new certs
x509_extensions  = ca_cert_ext      # The extensions to add to the cert
default_days     = 1460             # Lifetime; four years
default_crl_days = 30               # how long before next CRL
default_md       = sha1             # which message digest to use
policy           = root_name_policy # Policy for building the DN's
#email_in_dn      = no               # Self-explanatory, but commented out
#                                    # because of email:copy, below

[ root_name_policy ]
countryName            = match
organizationName       = match
organizationalUnitName =  optional
commonName             =  optional
emailAddress           =  optional

##
##  The CA that creates internal servers, and SSL certificates.
[ level1_ca ]
dir              = $DEST/level1_ca
serial           = $dir/serial.txt
database         = $dir/db.txt
certificate      = $dir/cert.pem
private_key      = $dir/key.pem
new_certs_dir    = $dir/certs
x509_extensions  = ca_cert_ext
default_days     = 730
default_crl_days = 30
default_md       = sha1
policy           = level1_name_policy
#email_in_dn      = no

[ level1_name_policy ]
countryName            = match
organizationName       = match
organizationalUnitName =  optional
commonName             = supplied
emailAddress           =  optional

##
##  The CA inside our XKMS service.
[ xkms_ca ]
dir              = $DEST/xkms_ca
serial           = $dir/serial.txt
database         = $dir/db.txt
certificate      = $dir/cert.pem
private_key      = $dir/key.pem
new_certs_dir    = $dir/certs
x509_extensions  = user_cert_ext
default_days     = 365
default_crl_days = 30
default_md       = sha1
policy           = xkms_name_policy
#email_in_dn      = no

[ xkms_name_policy ]
countryName            = match
organizationName       = match
organizationalUnitName =  optional
commonName             = supplied
emailAddress           = supplied


###
###   EXTENSIONS FOR CERTIFICATE TYPES
###

[ ca_cert_ext ]
subjectKeyIdentifier   = hash
# If you run into broken software, turn off the "critical" bit
basicConstraints       = critical,CA:true
#basicConstraints      = CA:true
keyUsage               = cRLSign, keyCertSign
subjectAltName         = email:copy

[ ssl_cert_ext ]
subjectKeyIdentifier   = hash
basicConstraints       = CA:FALSE
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth
subjectAltName         = email:move

[ user_cert_ext ]
subjectKeyIdentifier   = hash
basicConstraints       = CA:FALSE
keyUsage               = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName         = email:move
